<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns="http://nomisma.org/nudsHoard" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	exclude-result-prefixes="xsl xs nomisma rdf skos exsl atom gsx datetime od" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:nuds="http://nomisma.org/nuds" xmlns:nomisma="http://nomisma.org/id/"
	xmlns:atom="http://www.w3.org/2005/Atom" xmlns:gsx="http://schemas.google.com/spreadsheets/2006/extended" xmlns:exsl="http://exslt.org/common" xmlns:datetime="http://exslt.org/dates-and-times"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:od="urn:schemas-microsoft-com:officedata"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0">

	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>

	<xsl:template match="/">
		<list>
			<xsl:apply-templates select="descendant::findspot"/>
		</list>
	</xsl:template>

	<xsl:template match="findspot">
		<xsl:result-document href="nudsHoard/{upper-case(findcode)}.xml">
			<xsl:variable name="findcode" select="findcode"/>
			<xsl:variable name="doc_url">
				<xsl:text>https://spreadsheets.google.com/feeds/list/0Avp6BVZhfwHAdDlNR0hQV0Rxekk2Wnl6WnBpQWdab3c/od6/public/values</xsl:text>
			</xsl:variable>
			<xsl:variable name="geonames_uri">
				<xsl:value-of select="document(concat($doc_url, '?sq=name%3d%22', encode-for-uri(NAME), '%22%20and%20country%3d%22', encode-for-uri(COUNTRY), '%22'))//atom:entry[1]/gsx:nameuri[1]"/>
			</xsl:variable>

			<nudsHoard xmlns="http://nomisma.org/nudsHoard" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:nuds="http://nomisma.org/nuds">
				<nudsHeader>
					<nudsid>
						<xsl:value-of select="upper-case(findcode)"/>
					</nudsid>
					<publicationStmt>
						<createdBy>NUDS-Hoard records generated by Ethan Gruber from Access database</createdBy>
						<publisher>American Numismatic Society</publisher>
						<project>Coin Hoards of the Roman Republic</project>
						<date standardDateTime="{if(contains(datetime:dateTime(), 'Z')) then datetime:dateTime() else concat(datetime:dateTime(), 'Z')}"/>
						<langUsage>
							<language>English</language>
						</langUsage>
					</publicationStmt>
					<rightsStmt>
						<copyrightHolder>Kris Lockyear</copyrightHolder>
						<date standardDate="2013">2013</date>
					</rightsStmt>
				</nudsHeader>
				<descMeta>
					<title xml:lang="en">
						<xsl:value-of select="NAME"/>
						<xsl:text> (</xsl:text>
						<xsl:value-of select="COUNTRY"/>
						<xsl:text>; </xsl:text>
						<xsl:value-of select="upper-case(findcode)"/>
						<xsl:text>)</xsl:text>
					</title>
					<xsl:if test="NOTES or SOURCE">
						<noteSet>
							<xsl:if test="NOTES">
								<note localType="notes">
									<xsl:value-of select="NOTES"/>
								</note>
							</xsl:if>
							<xsl:if test="SOURCE">
								<note localType="source">
									<xsl:value-of select="nomisma:normalize-source(SOURCE)"/>
								</note>
							</xsl:if>
						</noteSet>
					</xsl:if>
					<hoardDesc>
						<findspot>
							<geogname xlink:type="simple" xlink:role="findspot">
								<xsl:variable name="geonameId" select="substring-before(substring-after($geonames_uri, 'geonames.org/'), '/')"/>
								
								<xsl:if test="number($geonameId)">
									<xsl:attribute name="xlink:href">
										<xsl:value-of select="$geonames_uri"/>
									</xsl:attribute>
								</xsl:if>
								<!--<xsl:call-template name="get-placename">
									<xsl:with-param name="uri" select="$geonames_uri"/>
									</xsl:call-template>-->
								<xsl:value-of select="NAME"/>
							</geogname>
						</findspot>
					</hoardDesc>
					<contentsDesc>
						<contents>
							<xsl:variable name="cointypes">
								<cointypes xmlns="" xmlns:od="urn:schemas-microsoft-com:officedata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
									<xsl:for-each select="//coins[findcode=$findcode]">
										<xsl:variable name="ctype" select="ctype"/>
										<xsl:variable name="accuracy" select="accuracy"/>
										<xsl:variable name="total" select="total"/>

										<!-- assemble cointypes-->
										<xsl:for-each select="//cointype[CTYPE=$ctype]">
											<cointype accuracy="{$accuracy}" total="{$total}">
												<xsl:copy-of select="*"/>
											</cointype>
										</xsl:for-each>
									</xsl:for-each>
								</cointypes>

							</xsl:variable>

							<!--<xsl:copy-of select="$cointypes"/>-->

							<xsl:apply-templates select="exsl:node-set($cointypes)//cointype">
								<xsl:sort select="DATE_FROM" order="ascending" data-type="number"/>
							</xsl:apply-templates>
						</contents>
					</contentsDesc>
					<xsl:if test="count(corpora)  &gt; 0 or count(hrdrefs) &gt; 0">
						<refDesc>
							<xsl:apply-templates select="corpora"/>
							<xsl:apply-templates select="hrdrefs"/>
						</refDesc>
					</xsl:if>
				</descMeta>
			</nudsHoard>
		</xsl:result-document>
	</xsl:template>

	<xsl:template match="cointype">
		<xsl:element name="{if (number(@total) = 1) then 'coin' else 'coinGrp'}">
			<xsl:if test="number(@total) &gt; 1">
				<xsl:attribute name="count" select="@total"/>
			</xsl:if>
			<nuds:typeDesc>
				<xsl:attribute name="certainty">
					<xsl:value-of select="@accuracy"/>
				</xsl:attribute>

				<xsl:choose>
					<xsl:when test="coinrefs[CAT = 'rrc']">
						<xsl:attribute name="xlink:href" select="concat('http://nomisma.org/id/rrc-', replace(coinrefs[CAT = 'rrc']/REF, '/', '.'))"/>
						<xsl:attribute name="xlink:type">simple</xsl:attribute>
					</xsl:when>
					<xsl:when test="coinrefs[CAT = 'r1n']">
						<xsl:attribute name="xlink:href" select="concat('http://numismatics.org/ocre/id/ric.1(2).aug.', coinrefs[CAT = 'r1n']/REF)"/>
						<xsl:attribute name="xlink:type">simple</xsl:attribute>
					</xsl:when>
					<xsl:otherwise>
						<xsl:call-template name="normalize-denomination">
							<xsl:with-param name="abbr" select="DENOM"/>
						</xsl:call-template>

						<!-- create date -->
						<xsl:if test="number(DATE_FROM) != 0 and number(DATE_TO) != 0">
							<xsl:choose>
								<xsl:when test="number(DATE_FROM) = number(DATE_TO)">
									<nuds:date standardDate="{format-number(number(DATE_FROM), '0000')}">
										<xsl:if test="number(DATE_FROM) &gt; 0">
											<xsl:text>A.D. </xsl:text>
										</xsl:if>
										<xsl:value-of select="abs(DATE_FROM)"/>
										<xsl:if test="number(DATE_FROM) &lt; 0">
											<xsl:text> B.C.</xsl:text>
										</xsl:if>
									</nuds:date>
								</xsl:when>
								<xsl:otherwise>
									<nuds:dateRange>
										<nuds:fromDate standardDate="{format-number(number(DATE_FROM), '0000')}">
											<xsl:if test="number(DATE_FROM) &gt; 0">
												<xsl:text>A.D. </xsl:text>
											</xsl:if>
											<xsl:value-of select="abs(DATE_FROM)"/>
											<xsl:if test="number(DATE_FROM) &lt; 0">
												<xsl:text> B.C.</xsl:text>
											</xsl:if>
										</nuds:fromDate>
										<nuds:toDate standardDate="{format-number(number(DATE_TO), '0000')}">
											<xsl:if test="number(DATE_TO) &gt; 0">
												<xsl:text>A.D. </xsl:text>
											</xsl:if>
											<xsl:value-of select="abs(DATE_TO)"/>
											<xsl:if test="number(DATE_TO) &lt; 0">
												<xsl:text> B.C.</xsl:text>
											</xsl:if>
										</nuds:toDate>
									</nuds:dateRange>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:if>

						<!-- handle special cases -->
						<xsl:choose>
							<xsl:when test="CTYPE='2289'">
								<nuds:authority>
									<nuds:corpname xlink:type="simple" xlink:role="authority" xlink:href="http://nomisma.org/id/achaean_league">Achaean League</nuds:corpname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2291'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/hispania">Hispania</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2293'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/apollonia_illyria">Apollonia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2294'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/dyrrhachium">Dyrrhachium</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2295'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/emporiae">Emporiae</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2296'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/athens">Athens</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2298'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/gallia">Gallia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2299'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="issuer">Aesillas</nuds:persname>
								</nuds:authority>
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/macedon">Macedon</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2300'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/arse">Arse</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2301'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Juba</nuds:persname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2302'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Juba II</nuds:persname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2305'">
								<nuds:authority>
									<nuds:corpname xlink:type="simple" xlink:role="authority" xlink:href="http://nomisma.org/id/thessalian_league">Thessalian League</nuds:corpname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2940'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/thasos">Thasos</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2941'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/dacia">Dacia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2942'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Tigranes</nuds:persname>
								</nuds:authority>
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/syria">Syria</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2943'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/marsallia">Marsallia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2944'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/britannia">Britannia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2945'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Ariobarzane I</nuds:persname>
								</nuds:authority>
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/galatia">Galatia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2946'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/maroneia">Maroneia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2947'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Audoleon</nuds:persname>
								</nuds:authority>
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/pannonia">Pannonia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2949'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/hispania">Hispania</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2950'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/populonia">Populonia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2952'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" certainty="uncertain" xlink:href="http://nomisma.org/id/apollonia_illyria">Apollonia</nuds:geogname>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/dyrrhachium" certainty="uncertain">Dyrrhachium</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2953'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority" xlink:href="http://nomisma.org/id/alexander_iii">Alexander the Great</nuds:persname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2954'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/istrus">Istrus</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2955'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/macedonia_1st_region">Macedonia, First Region</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2956'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/phrygia">Phrygia</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2958'">
								<nuds:authority>
									<nuds:persname xlink:type="simple" xlink:role="authority">Segestus</nuds:persname>
								</nuds:authority>
							</xsl:when>
							<xsl:when test="CTYPE='2960'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/carthage">Carthage</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2961'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="mint" xlink:href="http://nomisma.org/id/saguntum">Saguntum</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
							<xsl:when test="CTYPE='2964'">
								<nuds:geographic>
									<nuds:geogname xlink:type="simple" xlink:role="region" xlink:href="http://nomisma.org/id/noricum">Noricum</nuds:geogname>
								</nuds:geographic>
							</xsl:when>
						</xsl:choose>
					</xsl:otherwise>
				</xsl:choose>
			</nuds:typeDesc>
			<xsl:if test="count(coinrefs[CAT != 'rrc' and CAT != 'r1n']) &gt; 0 and count(coinrefs[CAT = 'rrc' or CAT = 'r1n']) = 0">
				<nuds:refDesc>
					<xsl:apply-templates select="coinrefs"/>
				</nuds:refDesc>
			</xsl:if>
		</xsl:element>
	</xsl:template>

	<xsl:template match="coinrefs">
		<xsl:choose>
			<xsl:when test="CAT = 'rrc'"/>
			<xsl:when test="CAT = 'r1n'"/>
			<xsl:otherwise>
				<nuds:reference certainty="{accuracy}">
					<nuds:title>
						<xsl:value-of select="CAT"/>
					</nuds:title>
					<nuds:identifier>
						<xsl:value-of select="REF"/>
					</nuds:identifier>
				</nuds:reference>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template match="corpora">
		<reference>
			<title>
				<xsl:value-of select="upper-case(CAT)"/>
			</title>
			<identifier>
				<xsl:value-of select="REF"/>
			</identifier>
		</reference>
	</xsl:template>

	<xsl:template match="hrdrefs">
		<xsl:variable name="filename" select="REF"/>
		<reference>
			<objectXMLWrap>
				<xsl:apply-templates select="document(concat('refs/', $filename, '.xml'))/mods:modsCollection" mode="mods"/>
				<!--<xsl:copy-of select="document(concat('refs/', $filename, '.xml'))/*"/>-->
			</objectXMLWrap>
		</reference>
	</xsl:template>

	<xsl:template match="*" mode="mods">
		<xsl:element name="mods:{local-name()}">
			<xsl:apply-templates select="@* | node()" mode="mods"/>
		</xsl:element>
	</xsl:template>
	
	<xsl:template match="@*" mode="mods">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>
		</xsl:copy>
	</xsl:template>

	<xsl:function name="nomisma:normalize-source">
		<xsl:param name="abbr"/>

		<xsl:choose>
			<xsl:when test="$abbr='?'">[KL to check]</xsl:when>
			<xsl:when test="$abbr='?mhcop'">Offprint in Michael Crawford's archive.</xsl:when>
			<xsl:when test="$abbr='back'">Backendorf 1998.</xsl:when>
			<xsl:when test="$abbr='blazquez'">Blázquez 1987–88.</xsl:when>
			<xsl:when test="$abbr='book'">Publication(s).</xsl:when>
			<xsl:when test="$abbr='chit'">Chiţescu 1981.</xsl:when>
			<xsl:when test="$abbr='chit/pub'">Chiţescu 1981 (corrected).</xsl:when>
			<xsl:when test="$abbr='hw'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcci'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcci/pub'">Michael Crawford's personal notes and other publication.</xsl:when>
			<xsl:when test="$abbr='mhcfc'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcfc?'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhchw'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhchw/pub'">Michael Crawford's personal notes and other publication.</xsl:when>
			<xsl:when test="$abbr='mhclet'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcop'">offprint in Michael Crawford's archive.</xsl:when>
			<xsl:when test="$abbr='mhcop/back'">offprint in Michael Crawford's archive and Backendorf 1998.</xsl:when>
			<xsl:when test="$abbr='mhcop/pub'">offprint in Michael Crawford's archive and other publication.</xsl:when>
			<xsl:when test="$abbr='mhcphoto'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcts'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='mhcts/back'">offprint in Michael Crawford's archive and Backendorf 1998.</xsl:when>
			<xsl:when test="$abbr='mhcts/pub'">offprint in Michael Crawford's archive and Backendorf 1998.</xsl:when>
			<xsl:when test="$abbr='msc'">Roman Republican Coinage.</xsl:when>
			<xsl:when test="$abbr='photos'">Michael Crawford's personal notes.</xsl:when>
			<xsl:when test="$abbr='pub'">publication(s).</xsl:when>
			<xsl:when test="$abbr='pub/chit'">Chiţescu 1981 (corrected).</xsl:when>
			<xsl:when test="$abbr='rrc'">Roman Republican Coinage.</xsl:when>
			<xsl:when test="$abbr='rrc/mhcts'">Michael Crawford's personal notes, partially published in Roman Republican coinage.</xsl:when>
			<xsl:when test="$abbr='rrc/pub'">Roman Republican Coinage and other publications.</xsl:when>
			<xsl:when test="$abbr='rrch'">Roman Republican Coin Hoards.</xsl:when>
			<xsl:when test="$abbr='sasianu'">Săşianu 1980.</xsl:when>
			<xsl:when test="$abbr='ts'">Michael Crawford's personal notes.</xsl:when>
		</xsl:choose>
	</xsl:function>

	<xsl:template name="normalize-denomination">
		<xsl:param name="abbr"/>

		<!-- derive nomisma URI from abbreviation: perform nomisma lookup to extract prefLabel -->
		<xsl:variable name="nomisma-uri">
			<xsl:choose>
				<xsl:when test="$abbr = '20as'">http://nomisma.org/id/20-as</xsl:when>
				<xsl:when test="$abbr = '40as'">http://nomisma.org/id/40-as</xsl:when>
				<xsl:when test="$abbr = '60as'">http://nomisma.org/id/60-as</xsl:when>
				<xsl:when test="$abbr = 'aur'">http://nomisma.org/id/aureus</xsl:when>
				<xsl:when test="$abbr = 'as'">http://nomisma.org/id/as</xsl:when>
				<xsl:when test="$abbr = 'decu'">http://nomisma.org/id/decussis</xsl:when>
				<xsl:when test="$abbr = 'quin'">http://nomisma.org/id/quincussis</xsl:when>
				<xsl:when test="$abbr = 'tres'">http://nomisma.org/id/tressis</xsl:when>
				<xsl:when test="$abbr = 'cist'">http://nomisma.org/id/cistophorus</xsl:when>
				<xsl:when test="$abbr = 'den'">http://nomisma.org/id/denarius</xsl:when>
				<xsl:when test="$abbr = 'didr'">http://nomisma.org/id/didrachm</xsl:when>
				<xsl:when test="$abbr = 'dlit'">http://nomisma.org/id/double-litra</xsl:when>
				<xsl:when test="$abbr = 'drac'">http://nomisma.org/id/drachm</xsl:when>
				<xsl:when test="$abbr = 'dup'">http://nomisma.org/id/dupondius</xsl:when>
				<xsl:when test="$abbr = 'hlit'">http://nomisma.org/id/half-litra</xsl:when>
				<xsl:when test="$abbr = 'hsta'">http://nomisma.org/id/half-stater</xsl:when>
				<xsl:when test="$abbr = 'stat'">http://nomisma.org/id/stater</xsl:when>
				<xsl:when test="$abbr = 'litr'">http://nomisma.org/id/litra</xsl:when>
				<xsl:when test="$abbr = 'qnrs'">http://nomisma.org/id/quinarius</xsl:when>
				<xsl:when test="$abbr = 'gqnr'">http://nomisma.org/id/quinarius_aureus</xsl:when>
				<xsl:when test="$abbr = 'quad'">http://nomisma.org/id/quadrans</xsl:when>
				<xsl:when test="$abbr = 'semi'">http://nomisma.org/id/semis</xsl:when>
				<xsl:when test="$abbr = 'sest'">http://nomisma.org/id/sestertius</xsl:when>
				<xsl:when test="$abbr = 'sext'">http://nomisma.org/id/sextans</xsl:when>
				<xsl:when test="$abbr = 'unc'">http://nomisma.org/id/uncia</xsl:when>
				<xsl:when test="$abbr = 'sunc'">http://nomisma.org/id/semuncia</xsl:when>
				<xsl:when test="$abbr = 'trie'">http://nomisma.org/id/triens</xsl:when>
				<xsl:when test="$abbr = 'vict'">http://nomisma.org/id/victoriatus</xsl:when>
				<xsl:when test="$abbr = 'unkn'">http://nomisma.org/id/uncertain_value</xsl:when>
				<xsl:when test="$abbr = 'misc'">http://nomisma.org/id/uncertain_value</xsl:when>
			</xsl:choose>
		</xsl:variable>

		<xsl:choose>
			<xsl:when test="string($nomisma-uri)">
				<nuds:denomination xlink:href="{$nomisma-uri}">
					<xsl:value-of select="document(concat('http://www.w3.org/2012/pyRdfa/extract?format=xml&amp;uri=', encode-for-uri($nomisma-uri)))//skos:prefLabel[@xml:lang='en']"/>
				</nuds:denomination>
			</xsl:when>
			<xsl:otherwise>
				<nuds:denomination>
					<xsl:value-of select="//denoms[DENOM=$abbr]/NAME"/>
				</nuds:denomination>
			</xsl:otherwise>
		</xsl:choose>

	</xsl:template>

	<xsl:template name="get-placename">
		<xsl:param name="uri"/>

		<xsl:choose>
			<xsl:when test="string($uri)">
				<xsl:variable name="geonameId" select="substring-before(substring-after($uri, 'geonames.org/'), '/')"/>
				<xsl:variable name="geonames_data" select="document(concat('http://api.geonames.org/get?geonameId=', $geonameId, '&amp;username=anscoins&amp;style=full'))"/>

				<!-- get place name-->
				<xsl:variable name="countryCode" select="exsl:node-set($geonames_data)/geoname/countryCode"/>
				<xsl:variable name="countryName" select="exsl:node-set($geonames_data)/geoname/countryName"/>
				<xsl:variable name="name" select="exsl:node-set($geonames_data)/geoname/name"/>
				<xsl:variable name="adminName1" select="exsl:node-set($geonames_data)/geoname/adminName1"/>
				<xsl:variable name="fcode" select="exsl:node-set($geonames_data)/geoname/fcode"/>


				<xsl:choose>
					<xsl:when test="$countryCode = 'US' or $countryCode = 'AU' or $countryCode = 'CA'">
						<xsl:choose>
							<xsl:when test="$fcode = 'ADM1'">
								<xsl:value-of select="$name"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$name"/>
								<xsl:text> (</xsl:text>
								<xsl:value-of select="nomisma:get-region($countryCode, $adminName1)"/>
								<xsl:text>)</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:when>
					<xsl:when test="$countryCode='GB'">
						<xsl:choose>
							<xsl:when test="$fcode = 'ADM1'">
								<xsl:value-of select="$name"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($name, ' (', $adminName1, ')')"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:when>
					<xsl:when test="$fcode='PCLI'">
						<xsl:value-of select="$name"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="concat($name, ' (', $countryName, ')')"/>
					</xsl:otherwise>
				</xsl:choose>

			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="NAME"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:function name="nomisma:get-region">
		<xsl:param name="countryCode"/>
		<xsl:param name="adminName1"/>

		<xsl:choose>
			<xsl:when test="$countryCode='US'">
				<xsl:choose>
					<xsl:when test="$adminName1='Alabama'">Ala.</xsl:when>
					<xsl:when test="$adminName1='Alaska'">Alaska</xsl:when>
					<xsl:when test="$adminName1='Arizona'">Ariz.</xsl:when>
					<xsl:when test="$adminName1='Arkansas'">Ark.</xsl:when>
					<xsl:when test="$adminName1='California'">Calif.</xsl:when>
					<xsl:when test="$adminName1='Colorado'">Colo.</xsl:when>
					<xsl:when test="$adminName1='Connecticut'">Conn.</xsl:when>
					<xsl:when test="$adminName1='Delaware'">Del.</xsl:when>
					<xsl:when test="$adminName1='Washington, D.C.'">D.C.</xsl:when>
					<xsl:when test="$adminName1='Florida'">Fla.</xsl:when>
					<xsl:when test="$adminName1='Georgia'">Ga.</xsl:when>
					<xsl:when test="$adminName1='Hawaii'">Hawaii</xsl:when>
					<xsl:when test="$adminName1='Idaho'">Idaho</xsl:when>
					<xsl:when test="$adminName1='Illinois'">Ill.</xsl:when>
					<xsl:when test="$adminName1='Indiana'">Ind.</xsl:when>
					<xsl:when test="$adminName1='Iowa'">Iowa</xsl:when>
					<xsl:when test="$adminName1='Kansas'">Kans.</xsl:when>
					<xsl:when test="$adminName1='Kentucky'">Ky.</xsl:when>
					<xsl:when test="$adminName1='Louisiana'">La.</xsl:when>
					<xsl:when test="$adminName1='Maine'">Maine</xsl:when>
					<xsl:when test="$adminName1='Maryland'">Md.</xsl:when>
					<xsl:when test="$adminName1='Massachusetts'">Mass.</xsl:when>
					<xsl:when test="$adminName1='Michigan'">Mich.</xsl:when>
					<xsl:when test="$adminName1='Minnesota'">Minn.</xsl:when>
					<xsl:when test="$adminName1='Mississippi'">Miss.</xsl:when>
					<xsl:when test="$adminName1='Missouri'">Mo.</xsl:when>
					<xsl:when test="$adminName1='Montana'">Mont.</xsl:when>
					<xsl:when test="$adminName1='Nebraska'">Nebr.</xsl:when>
					<xsl:when test="$adminName1='Nevada'">Nev.</xsl:when>
					<xsl:when test="$adminName1='New Hampshire'">N.H.</xsl:when>
					<xsl:when test="$adminName1='New Jersey'">N.J.</xsl:when>
					<xsl:when test="$adminName1='New Mexico'">N.M.</xsl:when>
					<xsl:when test="$adminName1='New York'">N.Y.</xsl:when>
					<xsl:when test="$adminName1='North Carolina'">N.C.</xsl:when>
					<xsl:when test="$adminName1='North Dakota'">N.D.</xsl:when>
					<xsl:when test="$adminName1='Ohio'">Ohio</xsl:when>
					<xsl:when test="$adminName1='Oklahoma'">Okla.</xsl:when>
					<xsl:when test="$adminName1='Oregon'">Oreg.</xsl:when>
					<xsl:when test="$adminName1='Pennsylvania'">Pa.</xsl:when>
					<xsl:when test="$adminName1='Rhode Island'">R.I.</xsl:when>
					<xsl:when test="$adminName1='South Carolina'">S.C.</xsl:when>
					<xsl:when test="$adminName1='South Dakota'">S.D</xsl:when>
					<xsl:when test="$adminName1='Tennessee'">Tenn.</xsl:when>
					<xsl:when test="$adminName1='Texas'">Tex.</xsl:when>
					<xsl:when test="$adminName1='Utah'">Utah</xsl:when>
					<xsl:when test="$adminName1='Vermont'">Vt.</xsl:when>
					<xsl:when test="$adminName1='Virginia'">Va.</xsl:when>
					<xsl:when test="$adminName1='Washington'">Wash.</xsl:when>
					<xsl:when test="$adminName1='West Virginia'">W.Va.</xsl:when>
					<xsl:when test="$adminName1='Wisconsin'">Wis.</xsl:when>
					<xsl:when test="$adminName1='Wyoming'">Wyo.</xsl:when>
					<xsl:when test="$adminName1='American Samoa'">A.S.</xsl:when>
					<xsl:when test="$adminName1='Guam'">Guam</xsl:when>
					<xsl:when test="$adminName1='Northern Mariana Islands'">M.P.</xsl:when>
					<xsl:when test="$adminName1='Puerto Rico'">P.R.</xsl:when>
					<xsl:when test="$adminName1='U.S. Virgin Islands'">V.I.</xsl:when>
				</xsl:choose>
			</xsl:when>
			<xsl:when test="$countryCode='CA'">
				<xsl:choose>
					<xsl:when test="$adminName1='Alberta'">Alta.</xsl:when>
					<xsl:when test="$adminName1='British Columbia'">B.C.</xsl:when>
					<xsl:when test="$adminName1='Manitoba'">Alta.</xsl:when>
					<xsl:when test="$adminName1='Alberta'">Man.</xsl:when>
					<xsl:when test="$adminName1='New Brunswick'">N.B.</xsl:when>
					<xsl:when test="$adminName1='Newfoundland and Labrador'">Nfld.</xsl:when>
					<xsl:when test="$adminName1='Northwest Territories'">N.W.T.</xsl:when>
					<xsl:when test="$adminName1='Nova Scotia'">N.S.</xsl:when>
					<xsl:when test="$adminName1='Nunavut'">NU</xsl:when>
					<xsl:when test="$adminName1='Ontario'">Ont.</xsl:when>
					<xsl:when test="$adminName1='Prince Edward Island'">P.E.I.</xsl:when>
					<xsl:when test="$adminName1='Quebec'">Que.</xsl:when>
					<xsl:when test="$adminName1='Saskatchewan'">Sask.</xsl:when>
					<xsl:when test="$adminName1='Yukon'">Y.T.</xsl:when>
				</xsl:choose>
			</xsl:when>
			<xsl:when test="$countryCode='AU'">
				<xsl:choose>
					<xsl:when test="$adminName1='Australian Capital Territory'">A.C.T.</xsl:when>
					<xsl:when test="$adminName1='Jervis Bay Territory'">J.B.T.</xsl:when>
					<xsl:when test="$adminName1='New South Wales'">N.S.W.</xsl:when>
					<xsl:when test="$adminName1='Northern Territory'">N.T.</xsl:when>
					<xsl:when test="$adminName1='Queensland'">Qld.</xsl:when>
					<xsl:when test="$adminName1='South Australia'">S.A.</xsl:when>
					<xsl:when test="$adminName1='Tasmania'">Tas.</xsl:when>
					<xsl:when test="$adminName1='Victoria'">Vic.</xsl:when>
					<xsl:when test="$adminName1='Western Australia'">W.A.</xsl:when>
				</xsl:choose>
			</xsl:when>
		</xsl:choose>
	</xsl:function>

</xsl:stylesheet>
